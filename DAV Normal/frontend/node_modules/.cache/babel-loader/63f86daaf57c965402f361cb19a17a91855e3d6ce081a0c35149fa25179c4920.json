{"ast":null,"code":"var _jsxFileName = \"C:\\\\DAV Normal\\\\DAV Normal\\\\frontend\\\\src\\\\components\\\\NormalFormTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatTableName(name) {\n  // Split by underscore, capitalize first word, uppercase the rest\n  const parts = name.split('_');\n  if (parts.length === 1) return name.charAt(0).toUpperCase() + name.slice(1);\n  return parts[0].charAt(0).toUpperCase() + parts[0].slice(1) + ' ' + parts.slice(1).map(p => p.toUpperCase()).join(' ');\n}\nfunction NormalFormTable({\n  endpoint\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    axios.get(`http://localhost:3001/api/${endpoint}`).then(res => {\n      setData(res.data);\n      setColumns(res.data.length > 0 ? Object.keys(res.data[0]) : []);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to fetch data');\n      setLoading(false);\n    });\n  }, [endpoint]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Loading \", endpoint, \"...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  if (data.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"No data for \", endpoint, \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: formatTableName(endpoint)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"6\",\n      style: {\n        borderCollapse: 'collapse',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[col]\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(NormalFormTable, \"yGqS0L04TcqcsYNXSQMwwW5GvyQ=\");\n_c = NormalFormTable;\nexport default NormalFormTable;\nvar _c;\n$RefreshReg$(_c, \"NormalFormTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","formatTableName","name","parts","split","length","charAt","toUpperCase","slice","map","p","join","NormalFormTable","endpoint","_s","data","setData","columns","setColumns","loading","setLoading","error","setError","get","then","res","Object","keys","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","border","cellPadding","borderCollapse","width","col","row","i","_c","$RefreshReg$"],"sources":["C:/DAV Normal/DAV Normal/frontend/src/components/NormalFormTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction formatTableName(name) {\r\n  // Split by underscore, capitalize first word, uppercase the rest\r\n  const parts = name.split('_');\r\n  if (parts.length === 1) return name.charAt(0).toUpperCase() + name.slice(1);\r\n  return (\r\n    parts[0].charAt(0).toUpperCase() + parts[0].slice(1) +\r\n    ' ' +\r\n    parts.slice(1).map(p => p.toUpperCase()).join(' ')\r\n  );\r\n}\r\n\r\nfunction NormalFormTable({ endpoint }) {\r\n  const [data, setData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(null);\r\n    axios.get(`http://localhost:3001/api/${endpoint}`)\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setColumns(res.data.length > 0 ? Object.keys(res.data[0]) : []);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to fetch data');\r\n        setLoading(false);\r\n      });\r\n  }, [endpoint]);\r\n\r\n  if (loading) return <div>Loading {endpoint}...</div>;\r\n  if (error) return <div style={{ color: 'red' }}>{error}</div>;\r\n  if (data.length === 0) return <div>No data for {endpoint}.</div>;\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <h3>{formatTableName(endpoint)}</h3>\r\n      <table border=\"1\" cellPadding=\"6\" style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col}>{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, i) => (\r\n            <tr key={i}>\r\n              {columns.map((col) => (\r\n                <td key={col}>{row[col]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NormalFormTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}